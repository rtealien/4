def func1(arg1, arg2):
    def func2(arg3, arg4):
        var5 = arg1 + (arg1 | arg3) & -1200601168
        var6 = var5 ^ arg3 + var5 ^ 474691015
        if arg1 < arg4:
            var7 = arg1 ^ (var6 & var6) & arg3
        else:
            var7 = arg3 | arg3 & arg1 & 849
        var8 = arg2 & arg4
        var9 = var5 ^ arg1 - arg1 | var5
        var10 = (var6 | arg1) | var8 ^ arg1
        var11 = arg1 - (arg2 + var8) | var10
        var12 = ((var9 + arg2) | arg1) & var8
        var13 = 921 + var6 | var8
        var14 = arg1 - (var9 - arg1 | var10)
        var15 = (arg3 + var10 + 65) | var13
        if var9 < arg4:
            var16 = arg3 + (var10 - arg1)
        else:
            var16 = (var11 ^ arg1) | (arg2 & var12)
        var17 = (var12 - var8 & var5) | var11
        var18 = var11 & arg1 + arg1
        var19 = var14 + (858650170 & var13) & var8
        var20 = arg1 & var15
        result = (((var20 + ((var20 + -537551386 ^ (-2009305644 | -1977036714)) & var6 | var5) ^ var20) - var15) - var12 | var11) ^ var20
        return result
    var21 = func2(arg1, arg2)
    var45 = func9()
    result = 2014639954 & 987
    return result
def func9():
    func3()
    result = len((i | (i - (-7 & -10)) - 8 ^ (8 & -4) - (i - 8 ^ -8 | -1) ^ 8 for i in func5(8, -10)))
    func4()
    return result
def func6(arg24, arg25):
    var29 = func7(arg24, arg25)
    var30 = -259 - arg25
    var31 = arg25 - var30
    var32 = arg25 - arg24 - var31 | var31 ^ (var30 - var31 ^ arg25) | var29
    var33 = (var29 + var31) - (460 & 692)
    result = -937 - ((arg25 & var30 - -1575944975 ^ -379256884 - var32 | var29) & ((-186 + var31) - var31) | arg24 - -325)
    return result
def func5(arg22, arg23):
    var34 = func6(arg22, arg23)
    yield var34
    var35 = -1014575610 + (arg23 - 571014337)
    yield var35
    var36 = (354 - arg23) + arg23 + arg22
    yield var36
    var37 = ((var36 ^ -441) | -808) + var36
    yield var37
    var38 = var35 + var35
    yield var38
    var39 = var36 | 1271082702 | arg22 | arg22
    yield var39
    var40 = -440 | var35 ^ arg22 & var35
    yield var40
    var41 = (1510112155 - (-844 & -338823623)) & var40
    yield var41
    var42 = ((var38 & var36) | var35) & var37
    yield var42
    var43 = (var36 & (var42 ^ var39)) + var39
    yield var43
    var44 = (var42 - (var38 | var40)) ^ var38
    yield var44
def func4():
    global len
    del len
def func3():
    global len
    len = lambda x : 1
def func7(arg26, arg27):
    def func8(acc, rest):
        var28 = rest + 6 - 6
        if acc == 0:
            return var28
        else:
            result = func8(acc - 1, var28)
            return result
    result = func8(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 10'
    print 'arg_number: 46'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
